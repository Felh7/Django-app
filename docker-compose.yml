services:
  web:
    build:
      context: ./
      dockerfile: docker/Django_server/dockerfile
    command: bash -c /usr/src/Django_server/scripts/script.sh && gunicorn Django_app.wsgi:application --bind 0.0.0.0:8080 
    expose:
      - '8000'
    volumes:
      - ./static:/var/www/Django_app/static/
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:16
    env_file: '.env'
    environment:
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_USER_PASS}
      POSTGRES_DB: ${PSQL_DATABASE_NAME}
    volumes:
      - PostgresqlData:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U djangouser -d djangodb"]
      interval: 1s
      timeout: 5s
      retries: 5

  nginx:
    build: 
      context: docker/reverse-proxy/
      dockerfile: dockerfile
    ports:
      - 8080:80
    depends_on:
      - web
    volumes:
      - ./static:/var/www/Django_app/static/
volumes:
  PostgresqlData: